ALF
			//使用root用户登陆
[root@iZwz9g60mbrgzg39lzeerlZ ~]# mysql -u root -p

			//展示数据库
MySQL [(none)]> show databases
    -> ;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| awesome            |
| mysql              |
| performance_schema |
| wordpress          |
+--------------------+
5 rows in set (0.00 sec)


			//展示所有用户
MySQL [mysql]> SELECT host,user from mysql.user;
+-----------+-----------+
| host      | user      |
+-----------+-----------+
| 127.0.0.1 | root      |
| localhost | root      |
| localhost | wordpress |
+-----------+-----------+
3 rows in set (0.00 sec)

			//添加用户
MySQL [(none)]> CREATE user 'clbMacBookPro'@'%' IDENTIFIED BY 'clbMacBookPro';
Query OK, 0 rows affected (0.00 sec)

//展示所有用户
MySQL [(none)]> SELECT host,user from mysql.user
    -> ;
+-----------+---------------+
| host      | user          |
+-----------+---------------+
| %         | clbMacBookPro |
| 127.0.0.1 | root          |
| localhost | root          |
| localhost | wordpress     |
+-----------+---------------+
4 rows in set (0.00 sec)

			//host的意义
% 		任意IP
localhost	本机IP
127.0.0.1
::1		127.0.0.1的Ipv6格式

			//展示某用户权限
MySQL [(none)]> SHOW grants for clbMacBookPro;
+--------------------------------------------------------------------------------------------------------------+
| Grants for clbMacBookPro@%                                                                                   |
+--------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'clbMacBookPro'@'%' IDENTIFIED BY PASSWORD '*447AAE4AF3D08D2DDF419CBA7B04785F75344B22' |
+--------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)
	ALL PRIVILEGES 是表示所有权限，你也可以使用select、update等权限。
	ON 用来指定权限针对哪些库和表。
	*.* 中前面的*号用来指定数据库名，后面的*号用来指定表名。
	TO 表示将权限赋予某个用户。
	jack@'localhost' 表示jack用户，@后面接限制的主机，可以是IP、IP段、域名以及%，%表示任何地方。注意：这里%有的版本不包括本地，以前碰到过给某个用户设置了%允许任何地方登录，但是在本地登录不了，这个和版本有关系，遇到这个问题再加一个localhost的用户就可以了。
	IDENTIFIED BY 指定用户的登录密码。
	WITH GRANT OPTION 这个选项表示该用户可以将自己拥有的权限授权给别人。注意：经常有人在创建操作用户的时候不指定WITH GRANT OPTION选项导致后来该用户不能使用GRANT命令创建用户或者给其它用户授权。
	备注：可以使用GRANT重复给用户添加权限，权限叠加，比如你先给用户添加一个select权限，然后又给用户添加一个insert权限，那么该用户就同时拥有了select和insert权限。

			//授予权限
MySQL [(none)]> GRANT all privileges ON awesome.* TO 'clbMacBookPro'@'%';
Query OK, 0 rows affected (0.00 sec)

			//是配置生效
MySQL [(none)]> FLUSH PRIVILEGES;
Query OK, 0 rows affected (0.00 sec)

			//产看端口号
MySQL [(none)]> show global variables like 'port'
    -> ;
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| port          | 3306  |
+---------------+-------+
1 row in set (0.00 sec)

			//查询数据表
MySQL [(none)]> USE awesome
Database changed
MySQL [awesome]> SHOW tables
    -> ;
+-------------------+
| Tables_in_awesome |
+-------------------+
| wordList          |
+-------------------+
1 row in set (0.00 sec)
			//查询表结构
MySQL [awesome]> SHOW columns FROM wordList;
+-----------------+--------------+------+-----+---------+-------+
| Field           | Type         | Null | Key | Default | Extra |
+-----------------+--------------+------+-----+---------+-------+
| word            | char(255)    | YES  |     | NULL    |       |
| chinese         | varchar(255) | YES  |     | NULL    |       |
| aPhoneticSymbol | char(255)    | YES  |     | NULL    |       |
| note            | text         | YES  |     | NULL    |       |
+-----------------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

删除表
MySQL [awesome]> DROP TABLE users;
Query OK, 0 rows affected (0.01 sec)
			//创建带主键的表
CREATE TABLE roles(id int primary key,name varchar(30));
Query OK, 0 rows affected (0.06 sec)
			//创建带外键的表
CREATE TABLE users(id int PRIMARY KEY,
			username varchar(30),
			password varchar(30),
			role_id int,
			FOREIGN KEY(role_id) REFERENCES roles(id));
Query OK, 0 rows affected (0.06 sec)
			//添加自动增长列
MySQL [awesome]> ALTER TABLE users DROP id;	//先删除
MySQL [awesome]> ALTER TABLE users ADD id INT NOT NULL PRIMARY KEY AUTO_INCREMENT FIRST;//在添加
			//删除表外键
MySQL [awesome]> SHOW CREATE TABLE users;
MySQL [awesome]> alter table users drop foreign key users_ibfk_1; //users_ibfk_1 通过创建表语句查询 对应的CONSTRAINT值是什么。
			//创建外键
MySQL [awesome]> ALTER TABLE users ADD id INT NOT NULL;	//现创建一个新行
MySQL [awesome]> ALTER TABLE users ADD CONSTRAINT fk_role_id FOREIGN KEY (role_id) REFERENCES roles(id);SHOW CREATE TABLE users;
